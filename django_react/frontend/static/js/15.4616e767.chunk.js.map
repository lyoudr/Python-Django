{"version":3,"sources":["shared/hooks/ThemeChoice.js","content/nav/Nav.js"],"names":["emit_color","Subject","ThemeChoice","useState","colorState","setTheme","useEffect","next","className","type","onClick","e","stopPropagation","isNavOpen","Nav","props","state","selecteditem","routeChange","theme","choosenav","bind","closeSide","openSideBar","navref","React","createRef","dimscreenRef","subscribe","isdarkOn","setState","unsubscribe","id","this","classList","remove","item","document","getElementById","add","body","clientWidth","current","Fragment","ref","role","aria-orientation","link","name","map","nav","index","key","to","Component"],"mappings":"iSAKaA,G,OAAa,IAAIC,KAAQ,IAEzBC,EAAc,WAAO,IAAD,EACAC,mBAAS,WADT,mBACxBC,EADwB,KACZC,EADY,KAS/B,OAHAC,qBAAU,WACRN,EAAWO,KAAKH,KACf,CAACA,IAEF,yBAAKI,UAAU,gBACb,2BAAOA,UAAS,iBAA2B,YAAfJ,EAA0B,MAAO,OAC3D,2BAAOK,KAAK,WAAWC,QAV7B,SAAgBC,GACdA,EAAEC,kBACFP,EAAwB,YAAfD,EAA2B,SAAW,cAS3C,0BAAMI,UAAU,oBCbXK,G,OAAY,IAAIZ,KAEvBa,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,aAAc,KACdC,aAAa,EACbC,MAAQ,WAEV,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBACjB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBACnB,EAAKG,OAASC,IAAMC,YACpB,EAAKC,aAAeF,IAAMC,YAXT,E,gEAaC,IAAD,OACjB1B,EAAW4B,WAAU,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAACX,MAAOU,S,6CAGvD7B,EAAW+B,gB,gCAEHC,GACJC,KAAKjB,MAAMC,cACbgB,KAAKjB,MAAMC,aAAaiB,UAAUC,OAAO,UAE3C,IAAIC,EAAOC,SAASC,eAAeN,GACnCC,KAAKH,SAAS,CAAEb,aAAcmB,IAC9BC,SAASC,eAAeN,GAAIE,UAAUK,IAAI,Y,kCAGtCF,SAASG,KAAKC,YAAc,MAC9BR,KAAKT,OAAOkB,QAAQR,UAAUK,IAAI,QAClCN,KAAKT,OAAOkB,QAAQR,UAAUC,OAAO,QACrCF,KAAKN,aAAae,QAAQR,UAAUC,OAAO,UAC3CtB,EAAUN,KAAK,W,oCAIb8B,SAASG,KAAKC,YAAc,MAC9BR,KAAKT,OAAOkB,QAAQR,UAAUC,OAAO,QACrCF,KAAKT,OAAOkB,QAAQR,UAAUK,IAAI,QAClCN,KAAKN,aAAae,QAAQR,UAAUK,IAAI,UACxC1B,EAAUN,KAAK,W,+BAGT,IAAD,OAUP,OACE,kBAAC,IAAMoC,SAAP,KACE,2BAAOC,IAAKX,KAAKT,OAAQhB,UAAWyB,KAAKjB,MAAMG,OAC7C,yBAAKT,QAASuB,KAAKX,UAAWd,UAAU,aAAxC,KACA,yBAAKA,UAAU,iCAAiCwB,GAAG,cAAca,KAAK,UAAUC,mBAAiB,YAC/F,kBAAC,IAAD,KAdS,CACf,CAAEC,KAAM,aAAcC,KAAM,aAC5B,CAAED,KAAM,YAAaC,KAAM,YAC3B,CAAED,KAAM,QAASC,KAAM,QACvB,CAAED,KAAM,WAAYC,KAAM,WAC1B,CAAED,KAAM,YAAaC,KAAM,YAC3B,CAAED,KAAM,qBAAsBC,KAAM,cACpC,CAAED,KAAM,WAAYC,KAAO,YAQTC,KAAI,SAACC,EAAKC,GAAN,OACZ,wBAAIzC,QAAS,WAAQ,EAAKU,UAAL,iBAAyB+B,IAAU,EAAK7B,aAAe8B,IAAG,aAAQD,GAAS3C,UAAU,YACxG,kBAAC,IAAD,CAAM6C,GAAIH,EAAIH,KAAMvC,UAAW,EAAKQ,MAAMG,OACxC,0BAAMa,GAAE,iBAAYmB,GAAS3C,UAAU,MAAM0C,EAAIF,YAKzD,kBAAC,EAAD,QAGJ,yBAAKJ,IAAKX,KAAKN,aAAcnB,UAAU,mB,GAvE7BiB,IAAM6B,WA6ETxC","file":"static/js/15.4616e767.chunk.js","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { Subject } from 'rxjs';\nimport '../../assets/sass/shared/hooks/themechoice.scss';\n\nexport const emit_color = new Subject(true);\n\nexport const ThemeChoice = () => {\n  const [colorState, setTheme] = useState(\"darkoff\");\n  function toggle(e) {\n    e.stopPropagation();\n    setTheme(colorState === \"darkoff\" ? \"darkon\" : \"darkoff\");\n  }\n  useEffect(() => {\n    emit_color.next(colorState);\n  }, [colorState]);\n  return (\n    <div className=\"switch_theme\">\n      <label className={`switch ${colorState === 'darkoff'? 'off': 'on'}`} >\n        <input type=\"checkbox\" onClick={toggle} />\n        <span className=\"slider round\"></span>\n      </label>\n    </div>\n  )\n};\n\n","import React from 'react';\nimport QueueAnim from '../../../node_modules/rc-queue-anim';\nimport { Link } from 'react-router-dom';\nimport { emit_color, ThemeChoice } from '../../shared/hooks/ThemeChoice';\nimport { Subject } from 'rxjs';\nimport '../../assets/sass/nav/nav.scss';\n\nexport const isNavOpen = new Subject();\n\nclass Nav extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selecteditem: null,\n      routeChange: false,\n      theme : \"darkoff\"\n    }\n    this.choosenav = this.choosenav.bind(this);\n    this.closeSide = this.closeSide.bind(this);\n    this.openSideBar = this.openSideBar.bind(this);\n    this.navref = React.createRef();\n    this.dimscreenRef = React.createRef();\n  }\n  componentDidMount(){\n    emit_color.subscribe(isdarkOn => this.setState({theme: isdarkOn}));\n  }\n  componentWillUnmount(){\n    emit_color.unsubscribe();\n  }\n  choosenav(id) {\n    if (this.state.selecteditem) {\n      this.state.selecteditem.classList.remove('active');\n    }\n    let item = document.getElementById(id);\n    this.setState({ selecteditem: item });\n    document.getElementById(id).classList.add('active');\n  }\n  closeSide() {\n    if (document.body.clientWidth < 600) {\n      this.navref.current.classList.add('hide');\n      this.navref.current.classList.remove('show');\n      this.dimscreenRef.current.classList.remove('active');\n      isNavOpen.next('hide');\n    }\n  }\n  openSideBar() {\n    if (document.body.clientWidth < 600) {\n      this.navref.current.classList.remove('hide');\n      this.navref.current.classList.add('show');\n      this.dimscreenRef.current.classList.add('active');\n      isNavOpen.next('show');\n    }\n  }\n  render() {\n    const navlists = [\n      { link: '/pianogame', name: 'PianoGame' },\n      { link: '/printout', name: 'PrintOut' },\n      { link: '/chat', name: 'Chat' },\n      { link: '/courses', name: 'Courses' },\n      { link: '/shoplist', name: 'ShopList' },\n      { link: '/search-restaurant', name: 'Restaurant' },\n      { link: '/discuss', name : 'Discuss'}\n    ]\n    return (\n      <React.Fragment>\n        <aside ref={this.navref} className={this.state.theme}>\n          <div onClick={this.closeSide} className=\"closeSide\">X</div>\n          <div className=\"nav flex-column nav-pills mt-5\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\n            <QueueAnim>\n              {navlists.map((nav, index) =>\n                <li onClick={() => { this.choosenav(`navitem${index}`); this.closeSide() }} key={`nav${index}`} className='nav-link'>\n                  <Link to={nav.link} className={this.state.theme}>\n                    <span id={`navitem${index}`} className=\"un\">{nav.name}</span>\n                  </Link>\n                </li>\n              )}\n            </QueueAnim>\n            <ThemeChoice />\n          </div>\n        </aside>\n        <div ref={this.dimscreenRef} className=\"dimScreen\"></div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Nav;"],"sourceRoot":""}