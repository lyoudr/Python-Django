{"version":3,"sources":["content/shop-list/comp/Item.js","content/shop-list/comp/AddToCart.js","content/shop-list/containers/addcartContain.js","content/shop-list/comp/ShopList.js","content/shop-list/containers/ShopDetail.js","content/shop-list/shoplist.js"],"names":["Item","props","Fragment","onClick","this","item_name","src","img_src","React","Component","Cart","console","log","list","id","price","description","color","size","addToCart","className","bind","connect","state","cart","dispatch","ShopList","isDetail","chooseColor","chooseSize","colors","sizes","scroll","window","requestAnimationFrame","callback","setTimeout","elementsToShow","document","querySelectorAll","loop","Array","prototype","forEach","call","element","el","jQuery","rect","getBoundingClientRect","top","bottom","innerHeight","documentElement","clientHeight","isElementInViewport","classList","remove","add","showShopDetail","setState","index","eachcolor","colorindex","contains","eachsize","sizeindex","shoplist","map","key","ref","CartCollections","lazy","price_range","selected_price","searchRef","createRef","compRef","searchItem","choosePrice","detectInput","fullComp","current","searchText","value","fetchPosts","HttpRequest","process","then","data","item","newShopDetail","e","target","showAllItem","type","onChange","length","to","tab-index","href","path","component","ShopItems","PureComponent","postsBysearchText","shoplists"],"mappings":"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","file":"static/js/18.88f5d1dd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Item extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <div onClick={this.props.onClick}>\n          <p>{this.props.item_name}</p>\n          <img src={this.props.img_src} />\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n  img_src: PropTypes.string.isRequired,\n  item_name: PropTypes.string.isRequired,\n  isDetail: PropTypes.bool.isRequired,\n  price: PropTypes.number.isRequired,\n  description: PropTypes.string.isRequired\n}\nexport default Item;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n  componentDidMount(){\n    console.log('this.props is =>', this.props.list.item_name)\n  }\n  addToCart(id, item_name, price, img_src, description, color, size) {\n    console.log('id is =>', id)\n    console.log('item_name is =>', item_name)\n    console.log('description is =>', description)\n    this.props.addToCart(id, item_name, price, img_src, description, color, size);\n  }\n  render() {\n    return (\n      <div className=\"addtocart\">\n        <button onClick={this.addToCart.bind(\n          this,\n          this.props.list.id,\n          this.props.list.item_name,\n          this.props.list.price,\n          this.props.list.img_src,\n          this.props.list.description,\n          this.props.color,\n          this.props.size)}>\n          Add To Cart\n        </button>\n      </div>\n    )\n  }\n}\n\nCart.propTypes = {\n  id: PropTypes.number.isRequired,\n}\n\nexport default Cart","import { connect } from 'react-redux';\nimport { addToCart } from '../../../redux/actions';\nimport Cart from '../comp/AddToCart';\n\nconst mapStateToProps = state =>{ \n    return({\n        cart : state.cart\n    })\n};\n\nconst mapDispatchToProps = dispatch => ({\n    addToCart: (id, item_name, price, img_src, description, color, size) => \n    dispatch(addToCart(id, item_name, price, img_src, description, color, size)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Cart)","import React from 'react';\nimport Item from './Item';\nimport AddCartContainer from '../containers/addcartContain';\nimport PropTypes from 'prop-types';\nimport jQuery from 'jquery';\n\nclass ShopList extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      list: {\n        id: 1,\n        item_name: '',\n        description: '',\n        img_src:'',\n        price:'',\n        isDetail: false\n      },\n      color: '',\n      size: ''\n    }\n    this.chooseColor = this.chooseColor.bind(this);\n    this.chooseSize = this.chooseSize.bind(this);\n    this.colors = [];\n    this.sizes = [];\n  }\n  componentDidUpdate() {\n    // Detect request animation frame\n    var scroll = window.requestAnimationFrame ||\n      // IE Fallback\n      function (callback) { window.setTimeout(callback, 1000 / 60) };\n\n    var elementsToShow = document.querySelectorAll('.show-on-scroll');\n\n    function loop() {\n      Array.prototype.forEach.call(elementsToShow, function (element) {\n        if (isElementInViewport(element)) {\n          element.classList.add('is-visible');\n        } else {\n          element.classList.remove('is-visible');\n        }\n      });\n      scroll(loop);\n    }\n    // Call the loop for the first time\n    loop();\n\n    // Helper function from: http://stackoverflow.com/a/7557433/274826\n    function isElementInViewport(el) {\n      // special bonus for those using jQuery\n      if (typeof jQuery === \"function\" && el instanceof jQuery) {\n        el = el[0];\n      }\n      var rect = el.getBoundingClientRect();\n      return (\n        (rect.top <= 0 && rect.bottom >= 0) ||\n        (rect.bottom >= (window.innerHeight || document.documentElement.clientHeight) &&\n          rect.top <= (window.innerHeight || document.documentElement.clientHeight)) ||\n        (rect.top >= 0 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight))\n      );\n    }\n  }\n  showShopDetail(id, list) {\n    console.log('list is =>', list)\n    this.props.showShopDetail(id);\n    this.setState({ list: list }, () => console.log('this.state.list is =>', this.state.list));\n  }\n  chooseColor(color, index) {\n    this.setState({ color: color });\n    this.colors.forEach((eachcolor, colorindex) => {\n      if (colorindex == index) {\n        if (!eachcolor.classList.contains('active')) {\n          eachcolor.classList.add('active');\n        }\n      } else {\n        eachcolor.classList.remove('active');\n      }\n    });\n  }\n  chooseSize(size, index) {\n    this.setState({ size: size });\n    this.sizes.forEach((eachsize, sizeindex) => {\n      if (sizeindex == index) {\n        if (!eachsize.classList.contains('active')) {\n          eachsize.classList.add('active');\n        }\n      } else {\n        eachsize.classList.remove('active');\n      }\n    });\n  }\n  render() {\n    const color = ['pink', 'green', 'blue', 'red'];\n    const size = ['S', 'M', 'L', 'XL'];\n    const props = this.state;\n    return (\n      <React.Fragment>\n        <div className=\"col-3 select\">\n          {this.props.shoplist.map(list =>\n            <Item\n              key={list.id}\n              {...list}\n              onClick={this.showShopDetail.bind(this, list.id, list)}\n            />\n          )\n          }\n        </div>\n        <div className=\"col-9 display\">\n          {this.props.shoplist.map(list =>\n            list.isDetail ? (\n              <div key={list.item_name}>\n                <img className=\"show-on-scroll\" src={list.img_src} />\n                <p>{list.item_name}</p>\n                <p>{list.price}</p>\n                <p>{list.description}</p>\n                <div className=\"color\">\n                  <span>Color</span>\n                  {color.map((color, index) =>\n                    <div key={color} ref={eachcolor => this.colors[index] = eachcolor}\n                      onClick={this.chooseColor.bind(this, color, index)}>\n                      <span>{color}</span>\n                    </div>\n                  )}\n                </div>\n                <div className=\"size\">\n                  <span>Size</span>\n                  {size.map((size, index) =>\n                    <div key={size} ref={eachsize => this.sizes[index] = eachsize} onClick={this.chooseSize.bind(this, size, index)}>\n                      {size}\n                    </div>\n                  )}\n                </div>\n                <AddCartContainer\n                  list = {this.state.list}\n                  color = {this.state.color}\n                  size = {this.state.size}\n                />\n              </div>\n            ) : (null)\n          )}\n        </div>\n      </React.Fragment>\n    )\n\n  }\n}\n\n\nShopList.propTypes = {\n  shoplist: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    img_src: PropTypes.string.isRequired,\n    item_name: PropTypes.string.isRequired,\n    isDetail: PropTypes.bool.isRequired,\n    price: PropTypes.number.isRequired,\n    description: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  showShopDetail: PropTypes.func.isRequired\n}\nexport default ShopList;","import { connect } from 'react-redux';\nimport { showShopDetail }  from '../../../redux/actions';\nimport ShopList from '../comp/ShopList';\n\nconst mapStateToProps = state =>{ \n    return({\n        shoplist : state.shoplist\n    })\n};\n\nconst mapDispatchToProps = dispatch => ({\n    showShopDetail: id => dispatch(showShopDetail(id)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ShopList)","import React, { lazy } from 'react';\nimport { Route, Link, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { newShopDetail, fetchPosts, showAllItem } from '../../redux/actions/index';\nimport ShopDetials from './containers/ShopDetail';\nimport ShopItems from './comp/ShopItems';\nimport {HttpRequest} from '../../services/http-service/httpService';\nimport '../../assets/sass/shoplist/shoplist.scss';\n\n// Lazy load cartcollections\nconst CartCollections = lazy(() => import('./containers/CartContainer'));\n\nclass ShopList extends React.PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      price_range : ['100 ~ 500', '500 ~ 1000', '1000 ~ 1500'],\n      selected_price : '100 ~ 500'\n    }\n    this.searchRef = React.createRef();\n    this.compRef = React.createRef();\n    this.searchItem = this.searchItem.bind(this);\n    this.choosePrice = this.choosePrice.bind(this);\n    this.detectInput = this.detectInput.bind(this);\n  }\n  /* Avoid Reconciliation => Optimizing Performance */\n  // shouldComponentUpdate(nextProps, nextState){\n  //   if(this.props.cart !== nextProps.cart || this.props.postsBysearchText !== nextProps.postsBysearchText){\n  //     return true; // if return true, react will re-render component and update DOM.\n  //   }\n  //   return false; // if return false, react won't re-render component and update DOM.\n  // }\n  componentDidUpdate() {\n    if (this.props.fullComp == true) {\n      this.compRef.current.classList.add('fullComp');\n    } else {\n      this.compRef.current.classList.remove('fullComp');\n    }\n  }\n  async searchItem() {\n    const searchText = this.searchRef.current.value;\n    // post search text to server to get results\n    this.props.fetchPosts(searchText);\n  }\n  choosePrice(price_range){\n    this.setState({selected_price: price_range});\n    HttpRequest.choosePrice(`${process.env.REACT_APP_HOSTURL}/shop_price/`, price_range)\n      .then(data => {\n        data.map(item => item.isDetail = false)\n        this.props.newShopDetail(data)\n      });\n  }\n  detectInput(e){\n    if(e.target.value === ''){\n      this.props.showAllItem();\n    }\n  }\n  render() {\n    return (\n      <div ref={this.compRef} className=\"shoplist main\">\n        <section className=\"shopselect\">\n          <div className=\"container\">\n            <div className=\"row justify-content-center search\">\n              <div className=\"col-10 col-md-8\">\n                <div>\n                  <input type=\"text\" ref={this.searchRef} onChange={this.detectInput.bind(this)}/>\n                  <button onClick={this.searchItem}>Search</button>\n                  <button>\n                    <div>{this.props.cart.length}</div>\n                    <Link to='/shoplist/cart'>Cart</Link>\n                  </button>\n                  <button>\n                    <Link to='/shoplist/shopitems'>Order</Link>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <nav>\n              <ul>\n                <li className=\"sub-menu-parent\" tab-index=\"0\">\n                  <a href=\"#\">Item1</a>\n                  <ul className=\"sub-menu\">\n                    <li><a href=\"#\">Sub Item 1</a></li>\n                    <li><a href=\"#\">Sub Item 2</a></li>\n                    <li><a href=\"#\">Sub Item 3</a></li>\n                    <li><a href=\"#\">Sub Item 4</a></li>\n                  </ul>\n                </li>\n                <li className=\"sub-menu-parent\" tab-index=\"0\">\n                  <a href=\"#\">Item2</a>\n                  <ul className=\"sub-menu\">\n                    <li><a href=\"#\">Sub Item 1</a></li>\n                    <li><a href=\"#\">Sub Item 2</a></li>\n                    <li><a href=\"#\">Sub Item 3</a></li>\n                    <li><a href=\"#\">Sub Item 4</a></li>\n                    <li><a href=\"#\">Sub Item 5</a></li>\n                    <li><a href=\"#\">Sub Item 6</a></li>\n                  </ul>\n                </li>\n                <li className=\"sub-menu-parent\" tab-index=\"0\">\n                  <a href=\"#\">Price</a>\n                  <ul className=\"sub-menu\">\n                  {this.state.price_range.map(price => \n                    <li key={price}>\n                      <a className={`price ${this.state.selected_price === price ? 'active': ''}`} \n                        onClick={this.choosePrice.bind(this, price)}>\n                          {price}\n                      </a>\n                    </li>)}\n                  </ul>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </section>\n        <section className=\"shopdetails\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <ShopDetials />\n            </div>\n          </div>\n        </section>\n        <Switch>\n          <Route path='/shoplist/cart' component={CartCollections} />\n          <Route path='/shoplist/shopitems' component={ShopItems} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return ({\n    postsBysearchText: state.postsBysearchText,\n    cart: state.cart\n  })\n};\n\nconst mapDispatchToProps = dispatch => ({\n  newShopDetail : (shoplists) => dispatch(newShopDetail(shoplists)),\n  fetchPosts : (searchText) => dispatch(fetchPosts(searchText)),\n  showAllItem : () => dispatch(showAllItem())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ShopList);\n"],"sourceRoot":""}