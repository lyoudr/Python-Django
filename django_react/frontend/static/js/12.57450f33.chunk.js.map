{"version":3,"sources":["assets/images/user.jpg","content/login/Login.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/regenerator-runtime/runtime.js"],"names":["module","exports","Login","props","userIdRef","React","createRef","passwordRef","state","redirectToPreviousRoute","login","bind","userInfo","userId","this","current","value","password","AuthService","then","setState","to","className","interval","delay","duration","type","key","src","user","style","borderRadius","placeholder","ref","id","aria-describedby","onClick","Component","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","method","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","obj","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"static/js/12.57450f33.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.8e5ac0ea.jpg\";","import React from 'react';\nimport AuthService from '../../services/auth-service/AuthService';\nimport { Redirect } from 'react-router-dom';\nimport user from '../../assets/images/user.jpg'\nimport QueueAnim from '../../../node_modules/rc-queue-anim';\nimport '../../assets/sass/global/global.scss';\nimport '../../assets/sass/login/login.scss';\n\n// Login Component\nclass Login extends React.Component {\n  constructor(props) {\n    super(props)\n    this.userIdRef = React.createRef();\n    this.passwordRef = React.createRef();\n    this.state = { redirectToPreviousRoute: false }\n    this.login = this.login.bind(this);\n  }\n  //2. 點擊 login 後，會設定 redirectToPreviousRoute 為 true\n  async login() {\n    const userInfo = {\n      userId: this.userIdRef.current.value,\n      password: this.passwordRef.current.value\n    }\n    AuthService.login(userInfo)\n      .then(() => {\n        this.setState({ redirectToPreviousRoute: true });\n      });\n  };\n\n  render() {\n    const redirectToPreviousRoute = this.state.redirectToPreviousRoute;\n    //3. 當 redirectToPreviousRoute 為 true，路由會導向 from (也就是 PianoGame) 的那頁\n    if (redirectToPreviousRoute) { //redirectToPreviousRoute) {\n      return <Redirect to={'/chat'} />\n    }\n    //1. 初始化的 redirectToPreviousRoute 為 false，會 render 以下區塊，讓使用者可以點擊 Log in 按鈕\n    return (\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-8 text-center\">\n            <QueueAnim interval={100} delay={1000} duration={1000} type=\"top\">\n              <div key=\"1\" className=\"mt-5\">\n                <img src={user} style={{ borderRadius: 50 + '%' }} />\n              </div>\n            </QueueAnim>\n            <QueueAnim interval={100} delay={1000} duration={2000} type=\"left\">\n              <p className=\"notify\">Please Enter Ann for name and ann123 for password to enter.</p>\n              <div key=\"1\" className=\"input-group mt-5\">\n                <div className=\"input-group-prepend\">\n                  <span className=\"input-group-text\">Name</span>\n                </div>\n                <input placeholder=\"Ann\" ref={this.userIdRef} type=\"text\" className=\"form-control\" id=\"name\" aria-describedby=\"inputGroup-sizing-default\" />\n              </div>\n              <div key=\"2\" className=\"input-group mt-5\">\n                <div className=\"input-group-prepend\">\n                  <span className=\"input-group-text\">Password</span>\n                </div>\n                <input placeholder=\"ann123\" ref={this.passwordRef} type=\"password\" className=\"form-control\" id=\"password\" aria-describedby=\"inputGroup-sizing-default\" />\n              </div>\n              <button key=\"3\" className=\"btn btn-secondary mt-5\" onClick={this.login} id=\"login_btn\">Log in</button>\n            </QueueAnim>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Login;","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}