"""
Django settings for django_react project.

Generated by 'django-admin startproject' using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'ltbl%cu0(!y@8arjj$k$3egkh#ich$s)=z7(9jajuwzw-cch_d'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['ec2-13-231-184-72.ap-northeast-1.compute.amazonaws.com', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    # channels
    'channels_redis',
    'channels',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'piano.apps.PianoConfig',
    'chatserver.apps.ChatserverConfig',
    'corsheaders'
]

MIDDLEWARE = [
    # 'django.middleware.cache.UpdateCacheMiddleware', # For cache all site
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'django.middleware.common.CommonMiddleware', # For cache all sites
    'piano.middleware.AuthenticateMiddleWare',
    # 'django.middleware.cache.FetchFromCacheMiddleware',,# For cache all sites
]
# # Key in `CACHES` dict
# CACHE_MIDDLEWARE_ALIAS = 'default'
# # Additional prefix for cache keys
# CACHE_MIDDLEWARE_KEY_PREFIX = ''
# # Cache key TTL in seconds
# CACHE_MIDDLEWARE_SECONDS = 600

SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'

ROOT_URLCONF = 'django_react.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_react.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'testDB',
        # For LocalHost
        # 'USER': 'ann', 
        # 'PASSWORD': '123456',
        # 'HOST': '127.0.0.1',
        # For docker-compose
        'USER': 'root', # when use docker container, python server can only connect to mysql docker throught root user
        'PASSWORD': '1234',
        'HOST': 'db',
        'PORT': '3306',
        'ATOMIC_REQUESTS': True
    }
}

# Caching Framework
CACHES = {
    # Use Memcached as cache server
    # 'default': {
    #     'BACKEND' :'django.core.cache.backends.memcached.MemcachedCache',
    #     'LOCATION': '127.0.0.1:11211', # where to serve this cache backend
    #     'OPTIONS' : {
    #         'server_max_value_length': 1024 * 1024 * 100
    #     }
    # }
    # Use Redis as cache server
    'default':{
        'BACKEND':'django_redis.cache.RedisCache',
        'LOCATION':'redis://session_caching:6379/1',
        'OPTIONS':{
            'CLIENT_CLASS':'django_redis.client.DefaultClient'
        }
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
MEDIA_ROOT = '/home/ann/Code/GitLab/React/Photos/'
REACT_APP_DIR = os.path.join(BASE_DIR, 'frontend')
CORS_ORIGIN_ALLOW_ALL=True
STATICFILES_DIRS = [
    os.path.join(REACT_APP_DIR, 'static')
]

# Channels
ASGI_APPLICATION='django_react.routing.application' # chatserver 為 routing 所在的目錄，這段它會自動轉換成到 chatserver 的 routing 找 application這個個體。也就是剛剛我們在 routing.py 中設定的。

# Use Redis as Channel layer
CHANNEL_LAYERS = {
  'default': {
    'BACKEND': 'channels_redis.core.RedisChannelLayer',
    # For docker-compose
    'CONFIG': {
      'hosts': [('session_caching', 6379)],
    },
    # For localhost test
    # 'CONFIG':{
    #   'hosts': [('127.0.0.1', 6379)],
    # }
  },
}

